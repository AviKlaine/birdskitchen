# This is a basic workflow to help you get started with Actions

name: Release

on:
  push:
    branches: [ master ]

jobs:
  linux_build:
    name: Linux Build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Cache node modules
        uses: actions/cache@v1
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install Dependencies
        run: npm install

      - name: Package
        run: npm run deploy:linux
        env:
          GH_TOKEN: '${{ secrets.GITHUB_TOKEN }}'
          EP_PRE_RELEASE: true

  mac_build:
    name: MacOS Build
    runs-on: macos-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Cache node modules
        uses: actions/cache@v1
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install Dependencies
        run: npm install

      - name: Package
        run: npm run deploy:mac
        env:
          GH_TOKEN: '${{ secrets.GITHUB_TOKEN }}'
          EP_PRE_RELEASE: true
          CSC_LINK: '${{ secrets.MAC_CSC_LINK }}'
          CSC_KEY_PASSWORD: '${{ secrets.MAC_CSC_KEY_PASSWORD }}'
          APPLE_ID: '${{ secrets.APPLE_ID }}'
          APPLE_ID_PASSWORD: '${{ secrets.APPLE_ID_PASSWORD }}'
          APPLE_PROVIDER_SHORTNAME: '${{ secrets.APPLE_PROVIDER_SHORTNAME }}'

  win_build:
    name: Windows Build
    runs-on: windows-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Cache node modules
        uses: actions/cache@v1
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install Dependencies
        run: npm install

      - name: Package
        run: npm run deploy:win
        env:
          GH_TOKEN: '${{ secrets.GITHUB_TOKEN }}'
          EP_PRE_RELEASE: true
          CSC_LINK: '${{ secrets.WIN_CSC_LINK }}'
          CSC_KEY_PASSWORD: '${{ secrets.WIN_CSC_KEY_PASSWORD }}'
